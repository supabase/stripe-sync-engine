name: Release

on:
  #push:
  #  branches:
  #    - 'main'
  workflow_dispatch:

jobs:
  release:
    name: Release

    runs-on: ubuntu-24.04

    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic-release.outputs.new_release_version }}

    steps:
      - uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node
        uses: actions/setup-node@v5
        with:
          node-version-file: ./.nvmrc
          cache: pnpm

      - run: |
          pnpm install --frozen-lockfile

      - name: Run semantic-release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 19
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Release on Docker Hub

    needs:
      - release

    if: needs.release.outputs.new-release-published == 'true'

    runs-on: ubuntu-24.04

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: supabase/stripe-sync-engine:latest,supabase/stripe-sync-engine:v${{ needs.release.outputs.new-release-version }}
          platforms: linux/amd64,linux/arm64

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  npm:
    name: Release on NPM

    needs:
      - release

    if: needs.release.outputs.new-release-published == 'true'

    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v5
        with:
          sparse-checkout: |
            packages/sync-engine

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set new version in sync-engine
        run: |
          cd packages/sync-engine
          pnpm version ${{ needs.release.outputs.new-release-version }} --no-git-tag-version

      - name: Publish sync-engine to npm
        run: |
          cd packages/sync-engine
          pnpm install --frozen-lockfile
          pnpm run build
          pnpm pack
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
